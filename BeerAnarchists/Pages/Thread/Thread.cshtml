@page
@using Forum.Data.Models;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<ForumUser> UserManager;
@inject SignInManager<ForumUser> SignInManager;
@model BeerAnarchists.Pages.Thread.ThreadModel
@{
    ViewData["Title"] = Model.Title;
    var user = await UserManager.GetUserAsync(User);
}

@functions{
  async Task DisplayPostsAsTree(IEnumerable<Forum.Data.Models.ForumPost> posts, int alternation, string userID, int depth = 0) {
        @foreach (var post in posts)
        {
          //class="border-start border-secondary border-3"
                <div style="padding-left:@(Math.Min(depth * 20, 120))px; margin-bottom:10px">
                    @{
                        await DisplayPost(post, alternation*2+depth%2, userID);
                      }
                </div>
                @if (post.Replies != null && post.Replies.Any())
                {
                    await DisplayPostsAsTree(post.Replies, alternation, userID, depth+1);
                }
        }
    }
    async Task DisplayPost(Forum.Data.Models.ForumPost post, int colorIndex, string UserId) {
        #region Constants
        //var Color = new string[]{ "#999999", "#6B6B6B", "#808080", "#5C5C5C" }[colorIndex];
        var Color = new string[]{ "#DDA0DD", "#C54B8C", "#D8BFD8", "#E0B0FF" }[colorIndex];
        var bordercolor = (await UserManager.IsInRoleAsync(post.Author, "Admin")) ? "gold" : "black";
        var viewer = await UserManager.GetUserAsync(User);
        #endregion

     #region Post -->
        <div style="background-color:@Color; border: 1px solid @bordercolor;">
     <!-- #region Post Heading -->
      <div class="row" style="border-bottom: 1px solid black; margin:5px; padding:5px">
        <div class="col" style="text-align:left">
          @(post.Author.Alias ?? post.Author.UserName) @(post.Ancestor == null ? "wrote:" : "replied:")
        </div>
        <div class="col" style="text-align:right">
          #@post.Id
        </div>
      </div>
     <!-- #endregion -->
     <!-- #region Post Body -->
      <div class="row">
      <div class="col-2" style="text-align:center" >
      <a asp-page="/Profile/DisplayProfile" asp-route-viewerId=@viewer?.Id asp-route-userId=@post.Author.Id>
      <img src="~/img/@post.Author.ImageUrl" style="width:96px; object-fit:contain; border: 1px solid black; margin-bottom:5px">
      </a>
                        <p style="margin-bottom:0px"> @(
                                await UserManager.IsInRoleAsync(await UserManager.FindByIdAsync(post.Author.Id), "Admin") ? "Admin" : "User"
                        )</p>
                        <p style="margin-bottom:0px">Posts: @post.Author.Posts</p>
                        <p style="margin-bottom:0px">Joined: @post.Author.MemberSince.ToShortDateString()</p>
      </div>
      <div class="col-9 border border-dark rounded" style="background-color:floralwhite; margin: 0 0 5px 0">
        @post.Content
      </div>
      </div>
    <!--  #endregion -->
    <!-- #region Post Footer, Button Area -->
      <div class="row" style="margin-top:10px; margin-bottom:10px;">
        <div class="col-2"></div>
        <div class="col-5 btn-group-sm">
        <a class="btn btn-primary btn-sm" asp-page="/AddReaction" asp-route-userId=@UserId asp-route-postId=@post.Id asp-route-threadId=@Model.Id asp-route-type=@ReactionType.Like>
          Like 
          <span class="badge rounded-pill bg-light text-dark"> 
            @post.Reactions.Where(x => x.Type == Forum.Data.Models.ReactionType.Like).Count()
          </span>
        </a>
        <a class="btn btn-primary btn-sm" asp-page="/AddReaction" asp-route-userId=@UserId asp-route-postId=@post.Id asp-route-threadId=@Model.Id asp-route-type=@ReactionType.Dislike>
          Dislike 
          <span class="badge rounded-pill bg-light text-dark"> 
            @post.Reactions.Where(x => x.Type == Forum.Data.Models.ReactionType.Dislike).Count()
           </span>
        </a>
        <a class="btn btn-primary btn-sm" asp-page="/AddReaction" asp-route-userId=@UserId asp-route-postId=@post.Id asp-route-threadId=@Model.Id asp-route-type=@ReactionType.Heart>
          Heart 
          <span class="badge rounded-pill bg-light text-dark"> 
            @post.Reactions.Where(x => x.Type == Forum.Data.Models.ReactionType.Heart).Count()
          </span>
        </a>
        <a class="btn btn-danger btn-sm" asp-page="/PostReport">
        Report!
        </a>
        </div>
        <div class="col-2" style="text-align:right">
                    @if (User.Claims.Any())
                    {
                        <a class="btn btn-secondary btn-sm" asp-page="/Post/PostReply" asp-route-postId="@post.Id">Write a reply to post!</a>
                    }
        </div>

        <div class="col-3" style="text-align:right">
          @post.Created
        </div>
      </div>
      <!-- #endregion -->
      </div>
      #endregion
    }
}

<div>
    <h3 class="display-4 text-center">@Model.Title</h3>
    <p style="text-align:center"> @Model.Description</p>

    @if (SignInManager.IsSignedIn(User))
    {
      <div class="row align-items-center">
        <div class="col-5 btn-group-lg">
          <a class="btn btn-secondary btn-lg" asp-page="/Post/NewPost" asp-route-userId=@user?.Id asp-route-threadId=@Model.Id>Write a new bottom level post!</a>
        </div>
      </div>
    }

    <div class="text-left" style="margin-top: 5px">
        @{
            int outerAlternation = 0;
        }
        @if(Model.Posts != null){
            await DisplayPostsAsTree(Model.Posts.Where(x => x.Ancestor is null), outerAlternation, user?.Id ,0);
            outerAlternation = outerAlternation++ % 2;
        }
    </div>
</div>
