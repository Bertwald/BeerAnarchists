@page
@using Forum.Data.Interfaces;
@using Forum.Data.Models;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<ForumUser> UserManager;
@inject IUser UserService;
@model BeerAnarchists.Pages.Profile.DisplayProfileModel
@{
  ViewData["Title"] = "User Profile: " + (Model.CurrentUserData.Alias ?? Model.CurrentUserData.UserName);
}
<div class="container">
  <div class="d-flex justify-content-between" style="border: 1px solid black; background-color:#4b0076; color:#f6d56d">
  <div class="col-lg-*"><h4></h4></div>
  <div class="col-lg-*"><h4>Member Profile</h4></div>
  <div class="col-lg-*"><p style="vertical-align:bottom">Member Since:@Model.CurrentUserData.MemberSince</p></div>
  </div>
<div class="row justify-content-center">
  <div class="col-6" style="max-width: 256px">
    <img src="~/img/@Model.CurrentUserData.ImageUrl" alt="Image" width="256"/>
  </div>
  <div class="col-6">
    <div class="row justify-content-center">
      @if(Model.CurrentUserData.Alias is not null){
        @Html.DisplayFor(m => m.CurrentUserData.Alias);
      }else{
        @Html.DisplayFor(m => m.CurrentUserData.UserName);
      }
    </div>
    <div class="row justify-content-center">
      Description: @Html.DisplayFor(m => (m.CurrentUserData.Description))
    </div>
    <div class="row justify-content-center">
      <div class="col-2" style="text-align:center">
        <p>Statistics:</p>
        #Posts: @Html.DisplayFor(m => m.CurrentUserData.NumberOfPosts)
        Latest post: @Html.DisplayFor(m => m.CurrentUserData.LatestPost)
      </div>
    </div>
  </div>
</div>
  <div class="row justify-content-center">
    <div class="col-5 input-group-lg">
      <form method="post" style="display:inline">
                @if(Model.ViewerData.Friends.Where(x => x.Id == Model.CurrentUserData.UserId).Any()) {
                    <button class="btn btn-warning btn-lg" asp-page-handler="AddFriend" asp-route-userId=@Model.ViewerId asp-route-friendId=@Model.CurrentUserData.UserId asp-route-befriend=@false>Remove Friend</button>
                 
                } else {
                <button class="btn btn-warning btn-lg" asp-page-handler="AddFriend" asp-route-userId=@Model.ViewerId asp-route-friendId=@Model.CurrentUserData.UserId asp-route-befriend=@true>Add Friend</button>
                }
      </form>
      <form method="post" style="display:inline">
            @if(Model.ViewerData.Ignored.Where(x => x.Id == Model.CurrentUserData.UserId).Any()) {
                <button class="btn btn-warning btn-lg" asp-page-handler="IgnoreUser" asp-route-userId=@Model.ViewerId asp-route-ignoredId=@Model.CurrentUserData.UserId asp-route-ignore=@false>Allow User</button>
           
            } else {
               <button class="btn btn-warning btn-lg" asp-page-handler="IgnoreUser" asp-route-userId=@Model.ViewerId asp-route-ignoredId=@Model.CurrentUserData.UserId asp-route-ignore=@true>Ignore User</button>
            }

      </form>
    
      <a class="btn btn-primary btn-lg" asp-page="/Message/PrivateMessage" asp-route-senderId=@Model.ViewerId asp-route-recieverId=@Model.CurrentUserData.UserId >Message <i class="bi bi-envelope"></i></a>
    </div>
  </div>
  </div>